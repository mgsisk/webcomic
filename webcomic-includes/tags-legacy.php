<?php
////
// Legacy Template Tags
// 
// These template tags are provided for compatibility with
// themes designed for versions of Webcomic prior to 3.
// This file can be safely deleted if you don't need these.
////

function comic_loop( $num = 1, $dep1 = false, $q = false ) { global $webcomic; $args = '&posts_per_page=' . $num . $q; return new WP_Query( 'post_type=webcomic_post' . $args ); }
function ignore_comics() { return false; }
function in_comic_category( $terms = false, $id = false ) { global $webcomic; return $webcomic->in_webcomic_term( 'webcomic_collection', $terms, $id ); }
function in_comic_chapter( $terms = false, $id = false ) { global $webcomic; return $webcomic->in_webcomic_term( 'webcomic_storyline', $terms, $id ); }
function get_the_comic( $id = false, $dep1 = false, $dep2 = false ) { global $webcomic; return $webcomic->get_webcomic_post( $id ); }
function get_the_chapter( $id ) { return get_term( $id, 'webcomic_storyline' ); }
function get_comic_object( $id = false, $size = false, $dep1 = false ) { global $webcomic; $size = ( 'thumb' == $size ) ? 'small' : $size; return $webcomic->get_webcomic_object( $size, 'post', false, $id ); }
function get_comic_buffer( $term = false ) { global $webcomic; return $webcomic->get_webcomic_buffer( $term ); }
function the_comic( $size = 'full', $link = false, $terms = false ) { global $webcomic; $size = ( 'thumb' == $size ) ? 'small' : $size; $taxonomy = ( $terms ) ? 'webcomic_storyline' : false; echo $webcomic->get_the_webcomic_object( $size, $link, $taxonomy, $terms, false, false ); }
function the_comic_embed( $size = 'small', $format = 'shtml' ) { global $webcomic; echo $webcomic->get_the_webcomic_embed( $format, $size ); }
function the_comic_series( $label = false ) { global $webcomic; if ( 'full' == $label || 'large' == $label || 'medium' == $label || 'small' == $label || 'thumb' == $label ) { $label = ( 'thumb' == $label ) ? 'small' : $label; $image = '&image=' . $label; } echo $webcomic->get_the_webcomic_post_terms( 'webcomic_collection', 'separator=, ' . $image ); }
function transcript_template( $file = false ) { global $webcomic; $webcomic->webcomic_transcripts_template( $file ); }
function transcript_id_fields( $captcha = false ) { global $webcomic; echo $webcomic->get_webcomic_transcribe_form_fields(); }
function have_transcript( $status = false ) { global $webcomic; return $webcomic->have_webcomic_transcripts( $status ); }
function comics_nav_link( $args = false ) { global $webcomic; $defaults = array( 'sep' => false, 'label' => '%label', 'fstlabel' => '%label', 'prelabel' => '%label', 'nxtlabel' => '%label', 'lstlabel' => '%label' ); $args = wp_parse_args( $args, $defaults ); if ( $args[ 'label' ] ) $args[ 'fstlabel' ] = $args[ 'prelabel' ] = $args[ 'nxtlabel' ] = $args[ 'lstlabel' ] = $args[ 'label' ]; extract( $args ); $sep = ( $sep ) ? $sep : ''; echo $webcomic->get_relative_webcomic_link( 'first', '%link', $fstlabel ) . $sep . $webcomic->get_relative_webcomic_link( 'previous', '%link', $prelabel ) . $sep . $webcomic->get_relative_webcomic_link( 'next', '%link', $nxtlabel ) . $sep . $webcomic->get_relative_webcomic_link( 'last', '%link', $lstlabel ); }
function first_comic_link( $link = '%label', $dep1 = false, $dep2 = false ) { global $webcomic; if ( 'title' == $link || 'full' == $link || 'large' == $link || 'medium' == $link || 'small' == $link || 'thumb' == $link ) { $link = ( 'thumb' == $link ) ? 'small' : $link; $link = ( 'title' == $link ) ? '%'. $link : '%thumb-' . $link; } echo $webcomic->get_relative_webcomic_link( 'first', '%link', $link, false, false ); }
function last_comic_link( $link = '%label', $dep1 = false, $dep2 = false ) { global $webcomic; if ( 'title' == $link || 'full' == $link || 'large' == $link || 'medium' == $link || 'small' == $link || 'thumb' == $link ) { $link = ( 'thumb' == $link ) ? 'small' : $link; $link = ( 'title' == $link ) ? '%'. $link : '%thumb-' . $link; } echo $webcomic->get_relative_webcomic_link( 'last', '%link', $link, false, false ); }
function previous_comic_link( $link = '%label', $dep1 = false, $dep2 = false ) { global $webcomic; if ( 'title' == $link || 'full' == $link || 'large' == $link || 'medium' == $link || 'small' == $link || 'thumb' == $link ) { $link = ( 'thumb' == $link ) ? 'small' : $link; $link = ( 'title' == $link ) ? '%'. $link : '%thumb-' . $link; } echo $webcomic->get_relative_webcomic_link( 'previous', '%link', $link, false, false ); }
function next_comic_link( $link = '%label', $dep1 = false, $dep2 = false ) { global $webcomic; if ( 'title' == $link || 'full' == $link || 'large' == $link || 'medium' == $link || 'small' == $link || 'thumb' == $link ) { $link = ( 'thumb' == $link ) ? 'small' : $link; $link = ( 'title' == $link ) ? '%'. $link : '%thumb-' . $link; } echo $webcomic->get_relative_webcomic_link( 'next', '%link', $link, false, false ); }
function random_comic_link( $link = '%label', $dep1 = false, $dep2 = false ) { global $webcomic; if ( 'title' == $link || 'full' == $link || 'large' == $link || 'medium' == $link || 'small' == $link || 'thumb' == $link ) { $link = ( 'thumb' == $link ) ? 'small' : $link; $link = ( 'title' == $link ) ? '%'. $link : '%thumb-' . $link; } echo $webcomic->get_relative_webcomic_link( 'random', '%link', $link, false, false ); }
function bookmark_comic( $sep = false, $bookmark = false, $return = false, $clear = false ) { global $webcomic; $sep = ( $sep ) ? '<span class="bookmark-comic-separator">' . $sep . '</span>' : ''; echo '<div>' . $webcomic->get_bookmark_webcomic_link( 'bookmark', '%link', $bookmark ) . $sep . $webcomic->get_bookmark_webcomic_link( 'return', '%link', $return ) . $sep . $webcomic->get_bookmark_webcomic_link( 'remove', '%link', $clear ) . '</div>'; }
function chapters_nav_link( $args = false ) { global $webcomic; $defaults = array( 'sep' => false, 'label' => false, 'fstlabel'   => false, 'prelabel'   => false, 'nxtlabel'   => false, 'lstlabel'   => false ); $args = wp_parse_args( $args, $defaults ); if ( $args[ 'label' ] ) $args[ 'fstlabel' ] = $args[ 'prelabel' ] = $args[ 'nxtlabel' ] = $args[ 'lstlabel' ] = $args[ 'label' ]; extract( $args ); echo $webcomic->get_relative_webcomic_term_link( 'first', 'webcomic_storyline', '%link', $fstlabel, false, false ) . $sep . $webcomic->get_relative_webcomic_term_link( 'previous', 'webcomic_storyline', '%link', $prelabel, false, false ) . $sep . $webcomic->get_relative_webcomic_term_link( 'next', 'webcomic_storyline', '%link', $nxtlabel, false, false ) . $sep . $webcomic->get_relative_webcomic_term_link( 'last', 'webcomic_storyline', '%link', $lstlabel, false, false ); }
function first_chapter_link( $link = '%label', $dep1 = false, $dep2 = false, $dep3 = false ) { global $webcomic; if ( 'title' == $link || 'full' == $link || 'large' == $link || 'medium' == $link || 'small' == $link || 'thumb' == $link ) { $link = ( 'thumb' == $link ) ? 'small' : $link; $link = ( 'title' == $link ) ? '%'. $link : '%thumb-' . $link; } echo $webcomic->get_relative_webcomic_term_link( 'first', 'webcomic_storyline', '%link', $link, false, false ); }
function last_chapter_link( $link = '%label', $dep1 = false, $dep2 = false, $dep3 = false ) { global $webcomic; if ( 'title' == $link || 'full' == $link || 'large' == $link || 'medium' == $link || 'small' == $link || 'thumb' == $link ) { $link = ( 'thumb' == $link ) ? 'small' : $link; $link = ( 'title' == $link ) ? '%'. $link : '%thumb-' . $link; } echo $webcomic->get_relative_webcomic_term_link( 'last', 'webcomic_storyline', '%link', $link, false, false ); }
function previous_chapter_link( $link = '%label', $dep1 = false, $dep2 = false, $dep3 = false ) { global $webcomic; if ( 'title' == $link || 'full' == $link || 'large' == $link || 'medium' == $link || 'small' == $link || 'thumb' == $link ) { $link = ( 'thumb' == $link ) ? 'small' : $link; $link = ( 'title' == $link ) ? '%'. $link : '%thumb-' . $link; } echo $webcomic->get_relative_webcomic_term_link( 'previous', 'webcomic_storyline', '%link', $link, false, false ); }
function next_chapter_link( $link = '%label', $dep1 = false, $dep2 = false, $dep3 = false ) { global $webcomic; if ( 'title' == $link || 'full' == $link || 'large' == $link || 'medium' == $link || 'small' == $link || 'thumb' == $link ) { $link = ( 'thumb' == $link ) ? 'small' : $link; $link = ( 'title' == $link ) ? '%'. $link : '%thumb-' . $link; } echo $webcomic->get_relative_webcomic_term_link( 'next', 'webcomic_storyline', '%link', $link, false, false ); }
function the_chapter_link( $label = false, $dep1 = false, $dep2 = false ) { global $webcomic; if ( 'full' == $label || 'large' == $label || 'medium' == $label || 'small' == $label || 'thumb' == $label ) { $label = ( 'thumb' == $label ) ? 'small' : $label; $image = '&image=' . $label; } echo $webcomic->get_the_webcomic_post_terms( 'webcomic_storyline', 'separator=, ' . $image ); }
function single_chapter_title( $dep1 = false, $display = true ) { global $webcomic; if ( $display ) echo $webcomic->get_webcomic_term_info( 'name', 'webcomic_storyline' ); else return $webcomic->get_webcomic_term_info( 'name', 'webcomic_storyline' ); }
function chapter_description( $term = false ) { global $webcomic; return $webcomic->get_webcomic_term_info( 'description', 'webcomic_storyline', $term ); }
function recent_comics( $number = 5, $label = false, $limit = false ) { global $webcomic; if ( 'full' == $label || 'large' == $label || 'medium' == $label || 'small' == $label || 'thumb' == $label ) { $label = ( 'thumb' == $label ) ? 'small' : $label; $image = '&image=' . $label; } $limit = ( $limit ) ? '&term_group=' . current( explode( ',', $limit ) ) : ''; echo $webcomic->get_the_webcomic_archive( 'limit=' . $number . $image . $limit ); }
function dropdown_comics( $args = false ) { global $webcomic; $defaults = array( 'format' => 'dropdown' ); $args = wp_parse_args( $args, $defaults ); $args[ 'order' ] = $args[ 'post_order' ]; $args[ 'group' ] = ( $args[ 'groupby' ] ) ? 'storyline' : false; echo $webcomic->get_the_webcomic_archive( $args ); }
function comic_archive( $args = false ) { global $webcomic; $defaults = array( 'format' => 'grid', 'last_only' => true ); $args = wp_parse_args( $args, $defaults ); if ( 'chapter' == $args[ 'groupby' ] ) $args[ 'format' ] = 'olist'; $args[ 'order' ] = $args[ 'post_order' ]; $args[ 'group_order' ] = $args[ 'order' ]; $args[ 'show_description' ] = $args[ 'descriptions' ]; $args[ 'show_count' ] = $args[ 'pages' ]; echo $webcomic->get_the_webcomic_archive( $args ); }

/* These functions have no direct equivalent in Webcomic 3 */
function random_comic() { return false; }
function get_post_comic_category() { return false; }
function get_comic_category() { return false; }
function get_the_collection( $args = false ) { return arrray(); }
function the_comic_buffer( $i = false, $terms = false ) { return false; }
function transcript_form_title( $new = false, $improve =false ) { return false; }
?>